apiVersion: v1
kind: Pod
metadata:
  annotations:
    cni.projectcalico.org/containerID: c1238f8ec9ac290b97b547e48010a98bc05420c988a664d9ee29522f8f3fbdee
    cni.projectcalico.org/podIP: 10.1.254.67/32
    cni.projectcalico.org/podIPs: 10.1.254.67/32
  creationTimestamp: "2022-11-06T14:07:28Z"
  generateName: kubernetes-dashboard-74b66d7f9c-
  labels:
    k8s-app: kubernetes-dashboard
    pod-template-hash: 74b66d7f9c
  name: kubernetes-dashboard-74b66d7f9c-dg688
  namespace: kube-system
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: kubernetes-dashboard-74b66d7f9c
    uid: bfdc309e-096d-4117-b613-ca7f29e259ed
  resourceVersion: "4410"
  uid: 929cb3d7-ae84-4150-90c8-2ba4fe3492f5
spec:
  containers:
  - args:
    - --auto-generate-certificates
    - --namespace=kube-system
    - -
    image: kubernetesui/dashboard:v2.7.0
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /
        port: 8443
        scheme: HTTPS
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 30
    name: kubernetes-dashboard
    ports:
    - containerPort: 8443
      protocol: TCP
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      runAsGroup: 2001
      runAsUser: 1001
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /certs
      name: kubernetes-dashboard-certs
    - mountPath: /tmp
      name: tmp-volume
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-4v4tr
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: microk8s-vm
  nodeSelector:
    kubernetes.io/os: linux
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    seccompProfile:
      type: RuntimeDefault
  serviceAccount: kubernetes-dashboard
  serviceAccountName: kubernetes-dashboard
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kubernetes-dashboard-certs
    secret:
      defaultMode: 420
      secretName: kubernetes-dashboard-certs
  - emptyDir: {}
    name: tmp-volume
  - name: kube-api-access-4v4tr
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2022-11-06T14:07:29Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2022-11-06T14:07:29Z"
    message: 'containers with unready status: [kubernetes-dashboard]'
    reason: ContainersNotReady
    status: "False"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2022-11-06T14:07:29Z"
    message: 'containers with unready status: [kubernetes-dashboard]'
    reason: ContainersNotReady
    status: "False"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2022-11-06T14:07:28Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - image: kubernetesui/dashboard:v2.7.0
    imageID: ""
    lastState: {}
    name: kubernetes-dashboard
    ready: false
    restartCount: 0
    started: false
    state:
      waiting:
        reason: ContainerCreating
  hostIP: 192.168.64.2
  phase: Pending
  qosClass: BestEffort
  startTime: "2022-11-06T14:07:29Z"
